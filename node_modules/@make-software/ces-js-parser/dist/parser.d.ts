import { CasperServiceByJsonRPC } from 'casper-js-sdk';
import { Event } from './event';
import { ExecutionResult } from './casper/types';
import { Schemas } from './schema';
export interface ContractMetadata {
    schemas: Schemas;
    contractHash: Uint8Array;
    contractPackageHash: Uint8Array;
    eventsSchemaUref: string;
    eventsUref: string;
}
export declare const EVENTS_SCHEMA_NAMED_KEY = "__events_schema";
export declare const EVENTS_NAMED_KEY = "__events";
export interface ParseResult {
    error: string | null;
    event: Event;
}
export declare class Parser {
    private readonly contractsMetadata;
    constructor(contractsMetadata: Record<string, ContractMetadata>);
    static create(rpcClient: CasperServiceByJsonRPC, contractHashes: string[]): Promise<Parser>;
    parseExecutionResult(executionResult: ExecutionResult): ParseResult[];
    private static getContractsMetadata;
}
export declare function fetchContractSchemasBytes(rpcClient: CasperServiceByJsonRPC, contractHash: string, stateRootHash: string): Promise<Uint8Array>;
